buildscript {
	ext.kotlin_version = "1.8.0"
}

plugins {
	id "org.jetbrains.kotlin.jvm"
	id "java-library"
	id "maven-publish"
	id "signing"
	
	id 'org.jetbrains.kotlinx.benchmark' version '0.4.4'
}

group "dev.ndawg"
version "2.0.0"
description "A context based event system."

repositories {
	mavenCentral()
}

sourceSets {
	benchmarks {
		kotlin.srcDirs = ["src/benchmarks/kotlin"]
		compileClasspath += main.output + main.compileClasspath
		runtimeClasspath += main.output + main.runtimeClasspath
	}
}

dependencies {
	// Kotlin libraries
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
	implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"
	
	// Logging
	implementation "org.slf4j:slf4j-api:2.0.6"
	implementation "io.github.microutils:kotlin-logging:3.0.5"
	
	// Testing
	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.3.1"
	testImplementation "org.junit.jupiter:junit-jupiter-api:5.3.1"
	testImplementation "io.kotlintest:kotlintest-runner-junit5:3.4.2"
	
	// Benchmarking
	benchmarksImplementation "org.jetbrains.kotlinx:kotlinx-benchmark-runtime:0.4.4"
//	benchmarksImplementation "org.junit.jupiter:junit-jupiter-api:5.3.1"
	
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId = "river"
			from components.java
			versionMapping {
				usage("java-api") {
					fromResolutionOf("runtimeClasspath")
				}
				usage("java-runtime") {
					fromResolutionResult()
				}
			}
			pom {
				name = "River"
				description = "A simple and powerful event system for Kotlin"
			}
		}
	}
	repositories {
		maven {
			// change URLs to point to your repos, e.g. http://my.org/repo
			def releasesRepoUrl = "$buildDir/repos/releases"
			def snapshotsRepoUrl = "$buildDir/repos/snapshots"
			url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
		}
	}
}

signing {
	sign publishing.publications.mavenJava
}

test {
	useJUnitPlatform()
}

benchmark {
	targets {
		register("benchmarks") {
			jmhVersion = "1.21"
		}
	}
}

compileKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}

compileTestKotlin {
	kotlinOptions {
		jvmTarget = "1.8"
	}
}